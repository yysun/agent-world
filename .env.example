# LLM Provider API Keys
OPENAI_API_KEY=your-openai-api-key
ANTHROPIC_API_KEY=your-anthropic-api-key
GOOGLE_API_KEY=your-google-api-key
XAI_API_KEY=your-xai-api-key

# Azure OpenAI Configuration
AZURE_OPENAI_API_KEY=your-azure-openai-api-key
AZURE_RESOURCE_NAME=your-resource-name
AZURE_DEPLOYMENT=your-deployment-name
AZURE_API_VERSION=2024-10-21-preview

# OpenAI-Compatible Provider Configuration
OPENAI_COMPATIBLE_API_KEY=your-openai-compatible-api-key
OPENAI_COMPATIBLE_BASE_URL=https://your-openai-compatible-base-url

# Ollama Configuration (OpenAI-compatible endpoint)
OLLAMA_BASE_URL=http://localhost:11434/v1


# Storage Configuration
# Use file storage
# export AGENT_WORLD_STORAGE_TYPE=file
# export AGENT_WORLD_DATA_PATH=./data/worlds

# Use SQLite storage (default)
# export AGENT_WORLD_STORAGE_TYPE=sqlite
# export AGENT_WORLD_SQLITE_DATABASE=./data/database.db


# Logging Configuration
# Set LOG_LEVEL for global default (error, warn, info, debug, trace)
# Default: error (only errors shown)
LOG_LEVEL=error

# Scenario-Based Logging Examples:
# Uncomment the categories you need for debugging

# === Storage Operations ===
# Enable storage migration tracking (schema updates, column additions)
# LOG_STORAGE_MIGRATION=info

# Debug storage queries (world loads, chat operations, memory queries)
# LOG_STORAGE_QUERY=debug

# Debug in-memory storage operations
# LOG_STORAGE_MEMORY=debug

# Track storage initialization
# LOG_STORAGE_INIT=info

# Enable all storage logs
# LOG_STORAGE=debug


# === MCP Server Operations ===
# Track MCP server lifecycle (start, stop, ready)
# LOG_MCP_LIFECYCLE=info

# Debug MCP connection establishment
# LOG_MCP_CONNECTION=debug

# Debug MCP tool discovery and caching
# LOG_MCP_TOOLS=debug

# Debug MCP tool execution
# LOG_MCP_EXECUTION=debug

# Enable all MCP logs
# LOG_MCP=debug


# === LLM Provider Operations ===
# Debug OpenAI provider
# LOG_LLM_OPENAI=debug

# Debug Anthropic provider
# LOG_LLM_ANTHROPIC=debug

# Debug Google provider
# LOG_LLM_GOOGLE=debug

# Enable all LLM logs
# LOG_LLM=debug


# === Chat Operations ===
# Track chat session operations (create, delete, title updates)
# LOG_CHAT_SESSION=info

# Enable all chat logs
# LOG_CHAT=debug


# === World/Agent Operations ===
# Track world lifecycle (create, delete, load)
# LOG_WORLD_LIFECYCLE=info

# Debug world subscriptions
# LOG_WORLD_SUBSCRIPTION=debug

# Debug activity tracking
# LOG_WORLD_ACTIVITY=debug

# Track agent lifecycle
# LOG_AGENT_LIFECYCLE=info

# Enable all world logs
# LOG_WORLD=debug

# Enable all agent logs
# LOG_AGENT=debug


# === Event Operations ===
# Debug message publishing
# LOG_EVENTS_PUBLISH=debug

# Debug agent message processing
# LOG_EVENTS_AGENT=debug

# Debug response generation
# LOG_EVENTS_RESPONSE=debug

# Debug memory operations
# LOG_EVENTS_MEMORY=debug

# Enable all event logs
# LOG_EVENTS=debug


# === Infrastructure ===
# Debug REST API
# LOG_API=debug

# Track server operations
# LOG_SERVER=info

# Debug CLI commands
# LOG_CLI=debug

# Debug WebSocket
# LOG_WS=debug


# === Common Debugging Patterns ===
# Database migration issues:
# LOG_STORAGE_MIGRATION=info LOG_STORAGE_QUERY=debug

# MCP server problems:
# LOG_MCP=debug

# Chat/messaging issues:
# LOG_CHAT_SESSION=info LOG_EVENTS=debug

# Agent response problems:
# LOG_EVENTS_AGENT=debug LOG_LLM=debug

# Performance analysis:
# LOG_MCP_EXECUTION=debug LOG_LLM=debug

# Enable all logs for troubleshooting:
# LOG_LEVEL=debug